{
  "hash": "6efd66ad8f96539b3784c77c1a6c9d56",
  "result": {
    "markdown": "---\ntitle: <b>Exploratory Data Analysis</b>\nformat:\n  html:\n    theme: lumen\n    toc: true\n    self-contained: true\n    embed-resources: true\n    page-layout: full\n    code-fold: true\n    code-tools: true\n---\n\n# Import Libraries\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport nltk\nfrom wordcloud import WordCloud, STOPWORDS\nfrom PIL import Image\nsns.set_theme(style=\"whitegrid\", palette='Set2')\n```\n:::\n\n\n# Import Data\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf = pd.read_csv('../../data/02-model-data/data_cleaned.csv')\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndriver_df = pd.read_csv('../../data/00-raw-data/drivers.csv')\ndf = pd.merge(df, driver_df[['driverId', 'driverRef']], on='driverId', how='left')\ndriver_df.rename(columns={'driverId':'pole_driverId'}, inplace=True)\ndf = pd.merge(df, driver_df[['pole_driverId', 'driverRef']], on='pole_driverId', how='left')\ndriver_df.rename(columns={'pole_driverId':'win_driverId'}, inplace=True)\ndf = pd.merge(df, driver_df[['win_driverId', 'driverRef']], on='win_driverId', how='left')\ndf.rename(columns={'driverRef_x':'driverRef', 'driverRef_y':'pole_driverRef', 'driverRef':'win_driverRef'}, inplace=True)\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>season</th>\n      <th>round</th>\n      <th>season_round</th>\n      <th>driverId</th>\n      <th>raceId</th>\n      <th>circuitId</th>\n      <th>position</th>\n      <th>points</th>\n      <th>grid</th>\n      <th>laps</th>\n      <th>...</th>\n      <th>cumulative_points</th>\n      <th>cumulative_laps</th>\n      <th>pole_driverId</th>\n      <th>pole_history</th>\n      <th>win_driverId</th>\n      <th>win_history</th>\n      <th>label</th>\n      <th>driverRef</th>\n      <th>pole_driverRef</th>\n      <th>win_driverRef</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>642</td>\n      <td>833</td>\n      <td>9</td>\n      <td>1</td>\n      <td>9.0</td>\n      <td>1</td>\n      <td>70</td>\n      <td>...</td>\n      <td>9.0</td>\n      <td>70</td>\n      <td>642</td>\n      <td>1</td>\n      <td>642</td>\n      <td>1</td>\n      <td>Podium</td>\n      <td>farina</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>786</td>\n      <td>833</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6.0</td>\n      <td>2</td>\n      <td>70</td>\n      <td>...</td>\n      <td>6.0</td>\n      <td>70</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Podium</td>\n      <td>fagioli</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>686</td>\n      <td>833</td>\n      <td>9</td>\n      <td>3</td>\n      <td>4.0</td>\n      <td>4</td>\n      <td>70</td>\n      <td>...</td>\n      <td>4.0</td>\n      <td>70</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Podium</td>\n      <td>reg_parnell</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>704</td>\n      <td>833</td>\n      <td>9</td>\n      <td>4</td>\n      <td>3.0</td>\n      <td>6</td>\n      <td>68</td>\n      <td>...</td>\n      <td>3.0</td>\n      <td>68</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Top_10</td>\n      <td>cabantous</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>627</td>\n      <td>833</td>\n      <td>9</td>\n      <td>5</td>\n      <td>2.0</td>\n      <td>9</td>\n      <td>68</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>68</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Top_10</td>\n      <td>rosier</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 25 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>season</th>\n      <th>round</th>\n      <th>season_round</th>\n      <th>driverId</th>\n      <th>raceId</th>\n      <th>circuitId</th>\n      <th>position</th>\n      <th>points</th>\n      <th>grid</th>\n      <th>laps</th>\n      <th>...</th>\n      <th>cumulative_points</th>\n      <th>cumulative_laps</th>\n      <th>pole_driverId</th>\n      <th>pole_history</th>\n      <th>win_driverId</th>\n      <th>win_history</th>\n      <th>label</th>\n      <th>driverRef</th>\n      <th>pole_driverRef</th>\n      <th>win_driverRef</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>642</td>\n      <td>833</td>\n      <td>9</td>\n      <td>1</td>\n      <td>9.0</td>\n      <td>1</td>\n      <td>70</td>\n      <td>...</td>\n      <td>9.0</td>\n      <td>70</td>\n      <td>642</td>\n      <td>1</td>\n      <td>642</td>\n      <td>1</td>\n      <td>Podium</td>\n      <td>farina</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>786</td>\n      <td>833</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6.0</td>\n      <td>2</td>\n      <td>70</td>\n      <td>...</td>\n      <td>6.0</td>\n      <td>70</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Podium</td>\n      <td>fagioli</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>686</td>\n      <td>833</td>\n      <td>9</td>\n      <td>3</td>\n      <td>4.0</td>\n      <td>4</td>\n      <td>70</td>\n      <td>...</td>\n      <td>4.0</td>\n      <td>70</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Podium</td>\n      <td>reg_parnell</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>704</td>\n      <td>833</td>\n      <td>9</td>\n      <td>4</td>\n      <td>3.0</td>\n      <td>6</td>\n      <td>68</td>\n      <td>...</td>\n      <td>3.0</td>\n      <td>68</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Top_10</td>\n      <td>cabantous</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1950</td>\n      <td>1</td>\n      <td>1950_1</td>\n      <td>627</td>\n      <td>833</td>\n      <td>9</td>\n      <td>5</td>\n      <td>2.0</td>\n      <td>9</td>\n      <td>68</td>\n      <td>...</td>\n      <td>2.0</td>\n      <td>68</td>\n      <td>642</td>\n      <td>0</td>\n      <td>642</td>\n      <td>0</td>\n      <td>Top_10</td>\n      <td>rosier</td>\n      <td>farina</td>\n      <td>farina</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 25 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndf.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nIndex(['season', 'round', 'season_round', 'driverId', 'raceId', 'circuitId',\n       'position', 'points', 'grid', 'laps', 'status', 'constructorRef',\n       'weather', 'stop', 'age_on_race', 'cumulative_points',\n       'cumulative_laps', 'pole_driverId', 'pole_history', 'win_driverId',\n       'win_history', 'label', 'driverRef', 'pole_driverRef', 'win_driverRef'],\n      dtype='object')\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nall_sentiment_df = pd.read_csv('../../data/01-modified-data/all_teams_sentiment_df.csv')\n```\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ngrouped_df = all_sentiment_df.groupby(['Team', 'sentiment'], as_index = False)['0'].count() # Group by team and sentiment\n```\n:::\n\n\n# Data Visualization\n\n- In our increasingly data-driven world, it’s more important than ever to have accessible ways to view and understand data. After all, the demand for data skills in employees is steadily increasing each year. Employees and business owners at every level need to have an understanding of data and of its impact.\n- That’s where data visualization comes in handy. With the goal of making data more accessible and understandable, data visualization in the form of dashboards is the go-to tool for many businesses to analyze and share information. \n- Data visualization is the graphical representation of information and data. By using visual elements like charts, graphs, and maps, data visualization tools provide an accessible way to see and understand trends, outliers, and patterns in data. Additionally, it provides an excellent way for employees or business owners to present data to non-technical audiences without confusion.\n- In the world of Big Data, data visualization tools and technologies are essential to analyze massive amounts of information and make data-driven decisions.\n- ​​​​Something as simple as presenting data in graphic format may seem to have no downsides. But sometimes data can be misrepresented or misinterpreted when placed in the wrong style of data visualization. When choosing to create a data visualization, it’s best to keep both the advantages and disadvantages in mind. \n- `Why data visualization is important?`\n    - The importance of data visualization is simple: it helps people see, interact with, and better understand data. Whether simple or complex, the right visualization can bring everyone on the same page, regardless of their level of expertise.\n    - It’s hard to think of a professional industry that doesn’t benefit from making data more understandable. Every STEM field benefits from understanding data—and so do fields in government, finance, marketing, history, consumer goods, service industries, education, sports, and so on. \n    - While we’ll always wax poetically about data visualization (you’re on the Tableau website, after all) there are practical, real-life applications that are undeniable. And, since visualization is so prolific, it’s also one of the most useful professional skills to develop. The better you can convey your points visually, whether in a dashboard or a slide deck, the better you can leverage that information. The concept of the citizen data scientist is on the rise. Skill sets are changing to accommodate a data-driven world. It is increasingly valuable for professionals to be able to use data to make decisions and use visuals to tell stories of when data informs the who, what, when, where, and how. \n    - While traditional education typically draws a distinct line between creative storytelling and technical analysis, the modern professional world also values those who can cross between the two: data visualization sits right in the middle of analysis and visual storytelling.\n- `General Types of Visualizations:`\n    - Chart: Information presented in a tabular, graphical form with data displayed along two axes. Can be in the form of a graph, diagram, or map. Learn more.\n    - Table: A set of figures displayed in rows and columns. Learn more.\n    - Graph: A diagram of points, lines, segments, curves, or areas that represents certain variables in comparison to each other, usually along two axes at a right angle. \n    - Geospatial: A visualization that shows data in map form using different shapes and colors to show the relationship between pieces of data and specific locations. Learn more. \n    - Infographic: A combination of visuals and words that represent data. Usually uses charts or diagrams.\n    - Dashboards: A collection of visualizations and data displayed in one place to help with analyzing and presenting data. Learn more.\n- `Advantages:`\n    - Our eyes are drawn to colors and patterns. We can quickly identify red from blue, and squares from circles. Our culture is visual, including everything from art and advertisements to TV and movies. Data visualization is another form of visual art that grabs our interest and keeps our eyes on the message. When we see a chart, we quickly see trends and outliers. If we can see something, we internalize it quickly. It’s storytelling with a purpose. If you’ve ever stared at a massive spreadsheet of data and couldn’t see a trend, you know how much more effective a visualization can be.\n    - Easily sharing information.\n    - Interactively explore opportunities.\n    - Visualize patterns and relationships.\n- `Disadvantages:`\n    - While there are many advantages, some of the disadvantages may seem less obvious. For example, when viewing a visualization with many different datapoints, it’s easy to make an inaccurate assumption. Or sometimes the visualization is just designed wrong so that it’s biased or confusing.\n    - Biased or inaccurate information.\n    - Correlation doesn’t always mean causation.\n    - Core messages can get lost in translation.\n\n## Record Data\n\n### Visualizing Drivers with most wins and points\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nwin_count_df = df[df['position'] == 1.0].groupby('driverRef', as_index=False)['position'].count()\nwin_count_df.sort_values(by = 'position', axis=0, ascending=False, inplace=True)\nwin_count_df_top10 = win_count_df.head(10)\n\nmax_points_df = df.groupby('driverRef', as_index=False)['points'].sum()\nmax_points_df.sort_values(by = 'points', axis=0, ascending=False, inplace=True)\nmax_points_df_top10 = max_points_df.head(10)\n```\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nfig, ax = plt.subplots(nrows=1, ncols=2 ,figsize = (18, 10))\n\nsns.barplot(x = win_count_df_top10['driverRef'], y = win_count_df_top10['position'] , ax = ax[0])\nsns.barplot(x = max_points_df_top10['driverRef'], y = max_points_df_top10['points'], ax = ax[1])\n\nFS = 16\n\nax[1].set_xlabel('Driver', fontsize=FS)\nax[1].set_ylabel('Number of Points in Career', fontsize=FS)\nax[1].set_title('Top 10 Drivers with Most Points', fontsize=FS)\nax[1].set_xticklabels(ax[1].get_xticklabels(), rotation=45, horizontalalignment='right')\n\nax[0].set_xlabel('Driver', fontsize=FS)\nax[0].set_ylabel('Number of Wins in Career', fontsize=FS)\nax[0].set_title('Top 10 Drivers with Most Wins', fontsize=FS)\nax[0].set_xticklabels(ax[0].get_xticklabels(), rotation=45, horizontalalignment='right')\n\nplt.savefig('../../images/visualizations/main_data/top10_drivers_wins_points.png')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-10-output-1.png){width=1421 height=928}\n:::\n:::\n\n\nWhile Michael Schumacher has the more wins in his entire career than other drivers except Lewis Hamilton, he has lesser number of points as compared to them. By domain knowledge we also know that Schumacher was a part of F1 from the early 90s to 2004, which leads us to the conclusion the point distribution for getting wins has increased over the years. This strange behaviour may also mean that other drivers apart of Schumacher gained more points while not winning (positions 2-10 also has points).\n\n### Visualizing Constructors (Team) with most wins and points\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nc_win_count_df = df[df['position'] == 1.0].groupby('constructorRef', as_index=False)['position'].count()\nc_win_count_df.sort_values(by = 'position', axis=0, ascending=False, inplace=True)\nc_win_count_df_top10 = c_win_count_df.head(10)\n\nc_max_points_df = df.groupby('constructorRef', as_index=False)['points'].sum()\nc_max_points_df.sort_values(by = 'points', axis=0, ascending=False, inplace=True)\nc_max_points_df_top10 = c_max_points_df.head(10)\n```\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nfig, ax = plt.subplots(nrows=1, ncols=2 ,figsize = (18, 10))\n\nsns.barplot(x = c_win_count_df_top10['constructorRef'], y = c_win_count_df_top10['position'], ax=ax[0])\nsns.barplot(x = c_max_points_df_top10['constructorRef'], y = c_max_points_df_top10['points'], ax=ax[1])\n\nFS = 16\nax[1].set_xlabel('Constructor', fontsize=FS)\nax[1].set_ylabel('Number of Points', fontsize=FS)\nax[1].set_title('Top 10 Constructors with Most Points', fontsize=FS)\nax[1].set_xticklabels(ax[1].get_xticklabels(), rotation=45, horizontalalignment='right')\n\nax[0].set_xlabel('Constructor', fontsize=FS)\nax[0].set_ylabel('Number of Race Wins', fontsize=FS)\nax[0].set_title('Top 10 Constructors with Most Race Wins', fontsize=FS)\nax[0].set_xticklabels(ax[0].get_xticklabels(), rotation=45, horizontalalignment='right')\n\nplt.savefig('../../images/visualizations/main_data/top10_constructor_wins_points.png')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-12-output-1.png){width=1421 height=881}\n:::\n:::\n\n\nA team like McLaren has been in F1 since a very early time which justifies it being the second team while seeing race wins. But the points gathered for McLaren have been lesser in the past few years compared to before 2000. Since we already know the point distribution from being 1st in the race was less before 2000 and McLaren is now a mid-tier team it makes sense that it has less overall points despite being second in Race wins.\n\n### Comparison of most famous and successful drivers\n\n#### Sebastian Vettel, Lewis Hamilton and Fernando Alonso\nThese 3 drivers are also called the big 3 of the newer generation. All of them are from rival teams and are rivals on track too. They went head-to-head in a lot of battles on track which makes me want to compare their points , win histories and laps races over the past seasons.\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\ndf1 = df[(df['driverRef'] == 'vettel') | (df['driverRef'] == 'hamilton') | (df['driverRef'] == 'alonso')]\ndf2 = df1[['season', 'round', 'driverRef', 'cumulative_points']]\ndf3 = df1[['season', 'round', 'driverRef', 'win_history']]\ndf4 = df1[['season', 'round', 'driverRef', 'cumulative_laps']]\ndf5 = df1.groupby(['season', 'driverRef'], as_index=False)['points'].sum()\n```\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nfig, ax = plt.subplots(nrows=2, ncols=2 ,figsize = (18, 10))\nsns.lineplot(x = 'season', y = 'points', hue = 'driverRef', data = df5, ax=ax[0,0])\nsns.lineplot(x = 'season', y = 'cumulative_points', hue = 'driverRef', data = df2, ax=ax[0,1])\nsns.lineplot(x = 'season', y = 'win_history', hue = 'driverRef', data = df3, ax=ax[1,0])\nsns.lineplot(x = 'season', y = 'cumulative_laps', hue = 'driverRef', data = df4, ax=ax[1,1])\nplt.suptitle('Comparison of Vettel, Alonso and Hamilton Seasonwise', fontsize=16)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\nText(0.5, 0.98, 'Comparison of Vettel, Alonso and Hamilton Seasonwise')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-14-output-2.png){width=1415 height=901}\n:::\n:::\n\n\nThe number of points gained in each season for Alonso and Vettel peaked during 2011-2014 seasons while Hamilton peaked during 2017-2020. The downfall of Alonso resulted in the success of Hamiltion who became more succesful after 2013. \n\n#### Lewis Hamilton and Max Verstappen for the 2021 Season\nThe 2021 season went down to the last race and resulted in a very close finish for World Driver's Championship between Lewish Hamilton (2nd) and Max Verstappen (1st). The following section compares the points, laps completed and grid positions for all the races in the 2021 season.\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\ndf6 = df[(df['driverRef'] == 'max_verstappen') | (df['driverRef'] == 'hamilton')]\ndf6 = df6[df6['season'] == 2021]\ndf7 = df6[['round', 'driverRef', 'position']]\ndf8 = df6[['round', 'driverRef', 'points']]\ndf9 = df6[['round', 'driverRef', 'laps']]\ndf10 = df6[['round', 'driverRef', 'grid']]\n```\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nfig, ax = plt.subplots(nrows=2, ncols=2 ,figsize = (18, 10))\nsns.lineplot(x = 'round', y = 'position', hue = 'driverRef', data = df7, ax=ax[0,0])\nsns.lineplot(x = 'round', y = 'points', hue = 'driverRef', data = df8, ax=ax[0,1])\nsns.lineplot(x = 'round', y = 'laps', hue = 'driverRef', data = df9, ax=ax[1,0])\nsns.lineplot(x = 'round', y = 'grid', hue = 'driverRef', data = df10, ax=ax[1,1])\nplt.suptitle('Comparison of Hamilton and Max for 2021 roundwise', fontsize=16)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\nText(0.5, 0.98, 'Comparison of Hamilton and Max for 2021 roundwise')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-16-output-2.png){width=1419 height=901}\n:::\n:::\n\n\nHamilton and Max waere pretty consistent in terms of win results and grid positions with a few exceptions.\n\n### Drivers with Highest Win % and Pole wins\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\ndf['pole_win'] = np.where((df['position'] == 1.0) & (df['grid'] == 1.0), 1, 0)\ndf11 = df['driverRef'][df['pole_win'] == 1]\n```\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\ndf12 = pd.merge(df.groupby('driverRef', as_index=False)['round'].count(), df.groupby('driverRef', as_index=False)['win_history'].max(), on='driverRef')\ndf12['win_percentage'] = df12['win_history']/df12['round']*100\ndf12.sort_values(by = 'win_percentage', axis=0, ascending=False, inplace=True)\n```\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\nfig, ax = plt.subplots(nrows=2, ncols=1 ,figsize = (18, 23))\nsns.barplot(x = df12[df12['round']>50].head(20)['driverRef'], y = df12[df12['round']>50].head(20)['win_percentage'], ax=ax[0])\nsns.barplot(x = df11.value_counts().index[:20], y = df11.value_counts().values[:20], ax=ax[1])\nax[0].set_xticklabels(ax[0].get_xticklabels(), rotation=90, horizontalalignment='right')\nax[1].set_xticklabels(ax[1].get_xticklabels(), rotation=90, horizontalalignment='right')\nax[0].set_xlabel('Driver')\nax[0].set_ylabel('Win Percentage')\nax[0].set_title('Top 20 Drivers with Highest Win Percentage', fontsize=16)\nax[1].set_xlabel('Driver')\nax[1].set_ylabel('Number of Pole Wins')\nax[1].set_title('Top 20 Drivers with Most Pole Wins', fontsize=16)\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\nText(0.5, 1.0, 'Top 20 Drivers with Most Pole Wins')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-19-output-2.png){width=1407 height=1914}\n:::\n:::\n\n\n### Distribution of Labels\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nfig, ax = plt.subplots(nrows=1, ncols=2 ,figsize = (18, 10))\nax[0].pie(df['label'].value_counts(), labels = df['label'].value_counts().index, autopct='%1.1f%%')\nsns.countplot(x = 'label', data = df, ax=ax[1])\nplt.suptitle('Distribution of Labels')\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\nText(0.5, 0.98, 'Distribution of Labels')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-20-output-2.png){width=1358 height=901}\n:::\n:::\n\n\n### Pairplot\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\nsns.pairplot(df[['position', 'points', 'laps', 'grid', 'label']], hue='label')\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\n<seaborn.axisgrid.PairGrid at 0x1462975b0>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-21-output-2.png){width=1112 height=943}\n:::\n:::\n\n\n## Twitter Data\n\n### Pie charts to compare Sentiments of tweets written by fans of different teams\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\nteams = ['Ferrari', 'Mercedes', 'Redbull', 'Haas', 'Mclaren', 'Alpine', 'Williams', 'Aston Martin', 'Alpha Tauri', 'Alfa Romeo']\n\nfor team in teams:\n    \n    indiv_df = grouped_df[grouped_df['Team'] == team]\n    indiv_df = indiv_df.rename(columns = {'0': 'Count'})\n    #indiv_df = indiv_df.pivot(index = 'Team', columns = 'sentiment', values = 'Count')\n    #display(indiv_df)\n    \n    positive_percentage = (indiv_df[indiv_df['sentiment'] == 'positive']['Count'].values[0] / indiv_df['Count'].sum()) * 100\n    negative_percentage = (indiv_df[indiv_df['sentiment'] == 'negative']['Count'].values[0] / indiv_df['Count'].sum()) * 100\n    neutral_percentage = (indiv_df[indiv_df['sentiment'] == 'neutral']['Count'].values[0] / indiv_df['Count'].sum()) * 100\n    \n    positive = indiv_df[indiv_df['sentiment'] == 'positive']['Count'].values[0]\n    negative = indiv_df[indiv_df['sentiment'] == 'negative']['Count'].values[0]\n    neutral = indiv_df[indiv_df['sentiment'] == 'neutral']['Count'].values[0]\n    \n    labels = [\"Positive\", \"Neutral\",\"Negative\"]\n    sizes = [positive, neutral, negative]\n    plt.pie(sizes, startangle=90, autopct='%1.1f%%')\n    plt.legend(labels)\n    plt.title(\"Sentiment Analysis Result for keyword=\" + team)\n    plt.axis('equal')\n    plt.savefig('../../images/visualizations/sentiment_analysis/' + team + '_pie.png')\n    plt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-1.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-2.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-3.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-4.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-5.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-6.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-7.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-8.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-9.png){width=540 height=408}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-22-output-10.png){width=540 height=408}\n:::\n:::\n\n\n### Worldcloud to check the most used words in tweets for each team\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\ndef create_wordcloud(text):\n    #mask = np.array(Image.open(\"cloud.png\"))\n    stopwords = set(STOPWORDS)\n    wc = WordCloud(background_color=\"white\",\n                    max_words=3000,\n                    stopwords=stopwords,\n                    repeat=True)\n    wc.generate(str(text))\n    wc.to_file(\"../../images/visualizations/sentiment_analysis/\" + team + \"_wordcloud.png\")\n    path=\"../../images/visualizations/sentiment_analysis/\" + team + \"_wordcloud.png\"\n    display(Image.open(path))\n    \nfor team in teams:\n    \n    indiv_df = all_sentiment_df[all_sentiment_df['Team'] == team]\n    create_wordcloud(indiv_df[\"text\"].values)\n```\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-2.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-3.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-4.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-5.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-6.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-7.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-8.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-9.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-23-output-10.png){}\n:::\n:::\n\n\n### Scatter plot to Compare Polarity and Subjectivity distributions Sentiment-wise\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\nsns.scatterplot(data = all_sentiment_df, x = 'polarity', y = 'subjectivity', hue = 'sentiment')\nplt.title('Polarity vs Subjectivity Sentiment-wise', fontsize=16)\n#plt.savefig('../../501-project-website/images/visualizations/sentiment_analysis/scatterplot_polarity_vs_subjectivity.png')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-24-output-1.png){width=593 height=459}\n:::\n:::\n\n\n### Polarity and Subjectivity Values between Teams\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\nfig, ax = plt.subplots(nrows=1, ncols=2 ,figsize = (18, 10))\n\nsns.barplot(x = 'Team', y = 'polarity', data = all_sentiment_df, ax = ax[0])\nsns.barplot(x = 'Team', y = 'subjectivity', data = all_sentiment_df, ax = ax[1])\n\nFS = 18\nax[0].set_title('Team vs Polarity', fontsize = FS)\nax[1].set_title('Team vs Subjectivity', fontsize = FS)\nax[0].set_xlabel('Team', fontsize = FS)\nax[0].set_ylabel('Polarity', fontsize = FS)\nax[1].set_xlabel('Team', fontsize = FS)\nax[1].set_ylabel('Subjectivity', fontsize = FS)\nax[0].set_xticklabels(ax[0].get_xticklabels(), rotation=45, horizontalalignment='right')\nax[1].set_xticklabels(ax[1].get_xticklabels(), rotation=45, horizontalalignment='right')\n\n#plt.savefig('../../501-project-website/images/visualizations/sentiment_analysis/Team_vs_Polarity_Subjectivity.png')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](EDA_files/figure-html/cell-25-output-1.png){width=1436 height=893}\n:::\n:::\n\n\n",
    "supporting": [
      "EDA_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}